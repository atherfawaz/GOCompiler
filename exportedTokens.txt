(IDENTIFIER | func)
(DATATYPE | Integer)
(VAR_DEC | :)
(IDENTIFIER | numPrint)
(PRNT | ()
(DATATYPE | Integer)
(VAR_DEC | :)
(IDENTIFIER | num)
(COMMA | ,)
(DATATYPE | Integer)
(VAR_DEC | :)
(IDENTIFIER | length)
(PRNT | ))
(BRACES | {)
(DATATYPE | Integer)
(VAR_DEC | :)
(IDENTIFIER | i)
(COMMA | ,)
(IDENTIFIER | j)
(COMMA | ,)
(IDENTIFIER | first)
(COMMA | ,)
(IDENTIFIER | temp)
(SEMICOLON | ;)
(KEYWORD | char)
(VAR_DEC | :)
(IDENTIFIER | a)
(SEMICOLON | ;)
(IDENTIFIER | a)
(ASS_OP | :=)
(LIT_CONST | 'x')
(SEMICOLON | ;)
(KEYWORD | print)
(PRNT | ()
(STRING | "enter number")
(PRNT | ))
(SEMICOLON | ;)
(IDENTIFIER | In)
(INPUT_OP | >>)
(IDENTIFIER | i)
(SEMICOLON | ;)
(KEYWORD | println)
(PRNT | ()
(IDENTIFIER | i)
(PRNT | ))
(SEMICOLON | ;)
(IDENTIFIER | i)
(ASS_OP | :=)
(IDENTIFIER | length)
(SEMICOLON | ;)
(KEYWORD | while)
(IDENTIFIER | i)
(RO_OP | >)
(NUMBER | 0)
(VAR_DEC | :)
(BRACES | {)
(IDENTIFIER | first)
(ASS_OP | :=)
(NUMBER | 0)
(SEMICOLON | ;)
(IDENTIFIER | j)
(ASS_OP | :=)
(NUMBER | 1)
(SEMICOLON | ;)
(KEYWORD | while)
(IDENTIFIER | j)
(RO_OP | <)
(IDENTIFIER | i)
(VAR_DEC | :)
(BRACES | {)
(IDENTIFIER | write)
(PRNT | ()
(IDENTIFIER | j)
(PRNT | ))
(SEMICOLON | ;)
(IDENTIFIER | j)
(ASS_OP | :=)
(IDENTIFIER | j)
(AR_OP | +)
(NUMBER | 1)
(SEMICOLON | ;)
(BRACES | })
(KEYWORD | if)
(IDENTIFIER | j)
(RO_OP | ==)
(NUMBER | 1)
(VAR_DEC | :)
(BRACES | {)
(KEYWORD | print)
(PRNT | ()
(STRING | "one")
(PRNT | ))
(SEMICOLON | ;)
(BRACES | })
(KEYWORD | elif)
(IDENTIFIER | j)
(RO_OP | ==)
(NUMBER | 2)
(VAR_DEC | :)
(BRACES | {)
(KEYWORD | print)
(PRNT | ()
(STRING | "two")
(PRNT | ))
(SEMICOLON | ;)
(BRACES | })
(KEYWORD | else)
(BRACES | {)
(KEYWORD | print)
(PRNT | ()
(STRING | "others")
(PRNT | ))
(SEMICOLON | ;)
(BRACES | })
(IDENTIFIER | i)
(ASS_OP | :=)
(IDENTIFIER | i)
(AR_OP | -)
(NUMBER | 1)
(SEMICOLON | ;)
(BRACES | })
(KEYWORD | print)
(PRNT | ()
(STRING | "temp is")
(PRNT | ))
(SEMICOLON | ;)
(KEYWORD | println)
(PRNT | ()
(IDENTIFIER | temp)
(PRNT | ))
(SEMICOLON | ;)
(IDENTIFIER | ret)
(IDENTIFIER | i)
(SEMICOLON | ;)

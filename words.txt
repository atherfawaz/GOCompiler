KEYWORD func row 0 col 3
KEYWORD integer row 0 col 11
VAR_DEC : row 0 col 12
IDENTIFIER numPrint row 0 col 21
PRNT ( row 0 col 23
KEYWORD integer row 0 col 30
VAR_DEC : row 0 col 31
IDENTIFIER num row 0 col 35
COMMA , row 0 col 36
KEYWORD integer row 0 col 44
VAR_DEC : row 0 col 45
IDENTIFIER length row 0 col 52
PRNT ) row 0 col 53
BRACES { row 0 col 55
IDENTIFIER a row 1 col 5
ASS_OP := row 1 col 8
IDENTIFIER x row 1 col 10
AR_OP + row 1 col 12
PRNT ( row 1 col 14
IDENTIFIER b row 1 col 15
AR_OP + row 1 col 17
IDENTIFIER d row 1 col 19
PRNT ) row 1 col 20
AR_OP * row 1 col 22
IDENTIFIER c row 1 col 24
AR_OP - row 1 col 26
IDENTIFIER y row 1 col 28
SEMICOLON ; row 1 col 29
IDENTIFIER z row 2 col 5
ASS_OP := row 2 col 8
NUMBER 3 row 2 col 10
AR_OP * row 2 col 12
NUMBER 5 row 2 col 14
AR_OP + row 2 col 16
NUMBER 24 row 2 col 19
AR_OP - row 2 col 21
NUMBER 3 row 2 col 23
AR_OP / row 2 col 25
IDENTIFIER a row 2 col 27
AR_OP + row 2 col 29
NUMBER 20 row 2 col 32
AR_OP + row 2 col 34
PRNT ( row 2 col 36
NUMBER 3 row 2 col 38
AR_OP / row 2 col 40
NUMBER 4 row 2 col 42
AR_OP - row 2 col 44
NUMBER 2 row 2 col 45
PRNT ) row 2 col 46
SEMICOLON ; row 2 col 47
IDENTIFIER j row 3 col 5
ASS_OP := row 3 col 8
IDENTIFIER j row 3 col 10
AR_OP + row 3 col 12
NUMBER 3 row 3 col 14
AR_OP * row 3 col 16
NUMBER 5 row 3 col 18
AR_OP - row 3 col 20
NUMBER 2 row 3 col 22
SEMICOLON ; row 3 col 23
KEYWORD integer row 4 col 12
VAR_DEC : row 4 col 13
IDENTIFIER i row 4 col 15
COMMA , row 4 col 16
IDENTIFIER j row 4 col 18
COMMA , row 4 col 19
IDENTIFIER first row 4 col 25
COMMA , row 4 col 26
IDENTIFIER temp row 4 col 31
SEMICOLON ; row 4 col 32
KEYWORD char row 5 col 9
VAR_DEC : row 5 col 11
IDENTIFIER a row 5 col 13
SEMICOLON ; row 5 col 14
IDENTIFIER a row 6 col 6
ASS_OP := row 6 col 9
LIT_CONST 'x' row 6 col 13
SEMICOLON ; row 6 col 14
KEYWORD print row 7 col 10
PRNT ( row 7 col 12
STRING "enter number" row 7 col 26
PRNT ) row 7 col 27
SEMICOLON ; row 7 col 28
KEYWORD in row 8 col 7
INPUT_OP >> row 8 col 10
IDENTIFIER i row 8 col 12
SEMICOLON ; row 8 col 13
KEYWORD println row 9 col 12
PRNT ( row 9 col 14
IDENTIFIER i row 9 col 15
PRNT ) row 9 col 16
SEMICOLON ; row 9 col 17
IDENTIFIER i row 10 col 6
ASS_OP := row 10 col 9
IDENTIFIER length row 10 col 16
SEMICOLON ; row 10 col 17
KEYWORD while row 11 col 10
IDENTIFIER i row 11 col 12
RO_OP > row 11 col 14
NUMBER 0 row 11 col 16
VAR_DEC : row 11 col 18
BRACES { row 11 col 20
IDENTIFIER first row 12 col 13
ASS_OP := row 12 col 15
NUMBER 0 row 12 col 17
SEMICOLON ; row 12 col 18
IDENTIFIER j row 13 col 9
ASS_OP := row 13 col 12
NUMBER 1 row 13 col 14
SEMICOLON ; row 13 col 15
KEYWORD while row 14 col 13
IDENTIFIER j row 14 col 15
RO_OP < row 14 col 17
IDENTIFIER i row 14 col 19
VAR_DEC : row 14 col 20
BRACES { row 14 col 22
IDENTIFIER write row 15 col 17
PRNT ( row 15 col 18
IDENTIFIER j row 15 col 20
PRNT ) row 15 col 21
SEMICOLON ; row 15 col 22
IDENTIFIER j row 16 col 17
ASS_OP := row 16 col 20
IDENTIFIER j row 16 col 22
AR_OP + row 16 col 24
NUMBER 1 row 16 col 26
SEMICOLON ; row 16 col 27
BRACES } row 17 col 9
KEYWORD if row 18 col 10
IDENTIFIER j row 18 col 12
RO_OP == row 18 col 15
NUMBER 1 row 18 col 17
VAR_DEC : row 18 col 18
BRACES { row 18 col 19
KEYWORD print row 19 col 21
PRNT ( row 19 col 22
STRING "one" row 19 col 27
PRNT ) row 19 col 28
SEMICOLON ; row 19 col 29
KEYWORD if row 20 col 14
IDENTIFIER k row 20 col 16
RO_OP == row 20 col 19
NUMBER 2 row 20 col 21
VAR_DEC : row 20 col 22
BRACES { row 20 col 23
KEYWORD print row 21 col 21
PRNT ( row 21 col 22
STRING "three" row 21 col 29
PRNT ) row 21 col 30
SEMICOLON ; row 21 col 31
BRACES } row 22 col 13
BRACES } row 23 col 9
KEYWORD elif row 24 col 12
IDENTIFIER j row 24 col 14
RO_OP == row 24 col 16
NUMBER 2 row 24 col 17
VAR_DEC : row 24 col 18
BRACES { row 24 col 19
KEYWORD print row 25 col 17
PRNT ( row 25 col 18
STRING "two" row 25 col 23
PRNT ) row 25 col 24
SEMICOLON ; row 25 col 25
BRACES } row 26 col 9
KEYWORD elif row 27 col 12
IDENTIFIER a row 27 col 14
RO_OP == row 27 col 17
NUMBER 3 row 27 col 18
VAR_DEC : row 27 col 19
BRACES { row 27 col 20
KEYWORD print row 28 col 17
PRNT ( row 28 col 18
STRING "balalalal" row 28 col 29
PRNT ) row 28 col 30
SEMICOLON ; row 28 col 31
BRACES } row 29 col 9
KEYWORD else row 29 col 14
BRACES { row 29 col 16
KEYWORD print row 30 col 17
PRNT ( row 30 col 18
STRING "others" row 30 col 26
PRNT ) row 30 col 27
SEMICOLON ; row 30 col 28
BRACES } row 31 col 9
IDENTIFIER i row 33 col 9
ASS_OP := row 33 col 11
IDENTIFIER i row 33 col 13
AR_OP - row 33 col 15
NUMBER 1 row 33 col 17
SEMICOLON ; row 33 col 18
BRACES } row 37 col 5
IDENTIFIER z row 38 col 6
ASS_OP := row 38 col 9
NUMBER 3 row 38 col 11
AR_OP * row 38 col 13
NUMBER 5 row 38 col 15
AR_OP + row 38 col 17
NUMBER 24 row 38 col 20
AR_OP - row 38 col 22
NUMBER 3 row 38 col 24
AR_OP / row 38 col 26
IDENTIFIER a row 38 col 28
AR_OP + row 38 col 30
NUMBER 20 row 38 col 33
AR_OP + row 38 col 35
PRNT ( row 38 col 37
NUMBER 3 row 38 col 39
AR_OP / row 38 col 41
NUMBER 4 row 38 col 43
AR_OP - row 38 col 45
NUMBER 2 row 38 col 46
PRNT ) row 38 col 47
SEMICOLON ; row 38 col 48
KEYWORD print row 39 col 10
PRNT ( row 39 col 11
STRING "temp is" row 39 col 20
PRNT ) row 39 col 21
SEMICOLON ; row 39 col 22
KEYWORD println row 40 col 12
PRNT ( row 40 col 13
IDENTIFIER temp row 40 col 17
PRNT ) row 40 col 18
SEMICOLON ; row 40 col 19
IDENTIFIER ret row 41 col 8
IDENTIFIER i row 41 col 10
SEMICOLON ; row 41 col 11
BRACES } row 42 col 1

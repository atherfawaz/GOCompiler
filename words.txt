KEYWORD func row 0 col 3
KEYWORD integer row 0 col 11
VAR_DEC : row 0 col 12
IDENTIFIER numPrint row 0 col 21
PRNT ( row 0 col 23
KEYWORD integer row 0 col 30
VAR_DEC : row 0 col 31
IDENTIFIER num row 0 col 35
COMMA , row 0 col 36
KEYWORD integer row 0 col 44
VAR_DEC : row 0 col 45
IDENTIFIER length row 0 col 52
PRNT ) row 0 col 53
BRACES { row 0 col 55
KEYWORD integer row 1 col 12
VAR_DEC : row 1 col 13
IDENTIFIER i row 1 col 15
COMMA , row 1 col 16
IDENTIFIER j row 1 col 18
COMMA , row 1 col 19
IDENTIFIER first row 1 col 25
COMMA , row 1 col 26
IDENTIFIER temp row 1 col 31
COMMA , row 1 col 32
IDENTIFIER length row 1 col 39
SEMICOLON ; row 1 col 40
IDENTIFIER length row 2 col 11
ASS_OP := row 2 col 14
NUMBER 10 row 2 col 17
SEMICOLON ; row 2 col 18
KEYWORD char row 3 col 9
VAR_DEC : row 3 col 11
IDENTIFIER a row 3 col 13
SEMICOLON ; row 3 col 14
IDENTIFIER j row 4 col 6
ASS_OP := row 4 col 9
NUMBER 2 row 4 col 11
SEMICOLON ; row 4 col 12
IDENTIFIER first row 5 col 10
ASS_OP := row 5 col 13
NUMBER 4 row 5 col 15
SEMICOLON ; row 5 col 16
IDENTIFIER temp row 6 col 9
ASS_OP := row 6 col 12
NUMBER 5 row 6 col 14
SEMICOLON ; row 6 col 15
IDENTIFIER i row 7 col 5
ASS_OP := row 7 col 8
IDENTIFIER j row 7 col 10
AR_OP + row 7 col 12
PRNT ( row 7 col 14
IDENTIFIER first row 7 col 19
AR_OP + row 7 col 21
IDENTIFIER temp row 7 col 26
PRNT ) row 7 col 27
AR_OP * row 7 col 29
IDENTIFIER temp row 7 col 34
AR_OP - row 7 col 36
IDENTIFIER first row 7 col 42
SEMICOLON ; row 7 col 43
IDENTIFIER a row 10 col 6
ASS_OP := row 10 col 9
LIT_CONST 'x' row 10 col 13
SEMICOLON ; row 10 col 14
KEYWORD print row 11 col 10
PRNT ( row 11 col 12
STRING "enter number" row 11 col 26
PRNT ) row 11 col 27
SEMICOLON ; row 11 col 28
KEYWORD in row 12 col 7
INPUT_OP >> row 12 col 10
IDENTIFIER i row 12 col 12
SEMICOLON ; row 12 col 13
KEYWORD println row 13 col 12
PRNT ( row 13 col 14
IDENTIFIER i row 13 col 15
PRNT ) row 13 col 16
SEMICOLON ; row 13 col 17
IDENTIFIER i row 14 col 6
ASS_OP := row 14 col 9
IDENTIFIER length row 14 col 16
SEMICOLON ; row 14 col 17
KEYWORD while row 15 col 10
IDENTIFIER i row 15 col 12
RO_OP > row 15 col 14
NUMBER 0 row 15 col 16
VAR_DEC : row 15 col 18
BRACES { row 15 col 20
IDENTIFIER first row 16 col 13
ASS_OP := row 16 col 15
NUMBER 0 row 16 col 17
SEMICOLON ; row 16 col 18
IDENTIFIER j row 17 col 9
ASS_OP := row 17 col 12
NUMBER 1 row 17 col 14
SEMICOLON ; row 17 col 15
KEYWORD while row 18 col 13
IDENTIFIER j row 18 col 15
RO_OP < row 18 col 17
IDENTIFIER i row 18 col 19
VAR_DEC : row 18 col 20
BRACES { row 18 col 22
IDENTIFIER write row 19 col 17
PRNT ( row 19 col 18
IDENTIFIER j row 19 col 20
PRNT ) row 19 col 21
SEMICOLON ; row 19 col 22
IDENTIFIER j row 20 col 17
ASS_OP := row 20 col 20
IDENTIFIER j row 20 col 22
AR_OP + row 20 col 24
NUMBER 1 row 20 col 26
SEMICOLON ; row 20 col 27
BRACES } row 21 col 9
KEYWORD if row 22 col 10
IDENTIFIER j row 22 col 12
RO_OP == row 22 col 15
NUMBER 1 row 22 col 17
VAR_DEC : row 22 col 18
BRACES { row 22 col 19
KEYWORD print row 23 col 21
PRNT ( row 23 col 22
STRING "one" row 23 col 27
PRNT ) row 23 col 28
SEMICOLON ; row 23 col 29
KEYWORD if row 24 col 14
IDENTIFIER k row 24 col 16
RO_OP == row 24 col 19
NUMBER 2 row 24 col 21
VAR_DEC : row 24 col 22
BRACES { row 24 col 23
KEYWORD print row 25 col 21
PRNT ( row 25 col 22
STRING "three" row 25 col 29
PRNT ) row 25 col 30
SEMICOLON ; row 25 col 31
BRACES } row 26 col 13
BRACES } row 27 col 9
KEYWORD elif row 28 col 12
IDENTIFIER j row 28 col 14
RO_OP == row 28 col 16
NUMBER 2 row 28 col 17
VAR_DEC : row 28 col 18
BRACES { row 28 col 19
KEYWORD print row 29 col 17
PRNT ( row 29 col 18
STRING "two" row 29 col 23
PRNT ) row 29 col 24
SEMICOLON ; row 29 col 25
BRACES } row 30 col 9
KEYWORD elif row 31 col 12
IDENTIFIER a row 31 col 14
RO_OP == row 31 col 17
NUMBER 3 row 31 col 18
VAR_DEC : row 31 col 19
BRACES { row 31 col 20
KEYWORD print row 32 col 17
PRNT ( row 32 col 18
STRING "balalalal" row 32 col 29
PRNT ) row 32 col 30
SEMICOLON ; row 32 col 31
BRACES } row 33 col 9
KEYWORD else row 33 col 14
BRACES { row 33 col 16
KEYWORD print row 34 col 17
PRNT ( row 34 col 18
STRING "others" row 34 col 26
PRNT ) row 34 col 27
SEMICOLON ; row 34 col 28
BRACES } row 35 col 9
IDENTIFIER i row 37 col 9
ASS_OP := row 37 col 11
IDENTIFIER i row 37 col 13
AR_OP - row 37 col 15
NUMBER 1 row 37 col 17
SEMICOLON ; row 37 col 18
BRACES } row 41 col 5
IDENTIFIER z row 42 col 6
ASS_OP := row 42 col 9
NUMBER 3 row 42 col 11
AR_OP * row 42 col 13
NUMBER 5 row 42 col 15
AR_OP + row 42 col 17
NUMBER 24 row 42 col 20
AR_OP - row 42 col 22
NUMBER 3 row 42 col 24
AR_OP / row 42 col 26
IDENTIFIER a row 42 col 28
AR_OP + row 42 col 30
NUMBER 20 row 42 col 33
AR_OP + row 42 col 35
PRNT ( row 42 col 37
NUMBER 3 row 42 col 39
AR_OP / row 42 col 41
NUMBER 4 row 42 col 43
AR_OP - row 42 col 45
NUMBER 2 row 42 col 46
PRNT ) row 42 col 47
SEMICOLON ; row 42 col 48
KEYWORD print row 43 col 10
PRNT ( row 43 col 11
STRING "temp is" row 43 col 20
PRNT ) row 43 col 21
SEMICOLON ; row 43 col 22
KEYWORD println row 44 col 12
PRNT ( row 44 col 13
IDENTIFIER temp row 44 col 17
PRNT ) row 44 col 18
SEMICOLON ; row 44 col 19
IDENTIFIER ret row 45 col 8
IDENTIFIER i row 45 col 10
SEMICOLON ; row 45 col 11
BRACES } row 46 col 1

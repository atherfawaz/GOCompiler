KEYWORD func row 0 col 3
KEYWORD integer row 0 col 11
VAR_DEC : row 0 col 12
IDENTIFIER numPrint row 0 col 21
PRNT ( row 0 col 23
KEYWORD integer row 0 col 30
VAR_DEC : row 0 col 31
IDENTIFIER num row 0 col 35
COMMA , row 0 col 36
KEYWORD integer row 0 col 44
VAR_DEC : row 0 col 45
IDENTIFIER length row 0 col 52
PRNT ) row 0 col 53
BRACES { row 0 col 55
IDENTIFIER j row 1 col 5
ASS_OP := row 1 col 8
IDENTIFIER j row 1 col 10
AR_OP + row 1 col 12
NUMBER 3 row 1 col 14
AR_OP * row 1 col 16
NUMBER 5 row 1 col 18
AR_OP - row 1 col 20
NUMBER 2 row 1 col 22
SEMICOLON ; row 1 col 23
KEYWORD integer row 2 col 12
VAR_DEC : row 2 col 13
IDENTIFIER i row 2 col 15
COMMA , row 2 col 16
IDENTIFIER j row 2 col 18
COMMA , row 2 col 19
IDENTIFIER first row 2 col 25
COMMA , row 2 col 26
IDENTIFIER temp row 2 col 31
SEMICOLON ; row 2 col 32
KEYWORD char row 3 col 9
VAR_DEC : row 3 col 11
IDENTIFIER a row 3 col 13
SEMICOLON ; row 3 col 14
IDENTIFIER a row 4 col 6
ASS_OP := row 4 col 9
LIT_CONST 'x' row 4 col 13
SEMICOLON ; row 4 col 14
KEYWORD print row 5 col 10
PRNT ( row 5 col 12
STRING "enter number" row 5 col 26
PRNT ) row 5 col 27
SEMICOLON ; row 5 col 28
KEYWORD in row 6 col 7
INPUT_OP >> row 6 col 10
IDENTIFIER i row 6 col 12
SEMICOLON ; row 6 col 13
KEYWORD println row 7 col 12
PRNT ( row 7 col 14
IDENTIFIER i row 7 col 15
PRNT ) row 7 col 16
SEMICOLON ; row 7 col 17
IDENTIFIER i row 8 col 6
ASS_OP := row 8 col 9
IDENTIFIER length row 8 col 16
SEMICOLON ; row 8 col 17
KEYWORD while row 9 col 10
IDENTIFIER i row 9 col 12
RO_OP > row 9 col 14
NUMBER 0 row 9 col 16
VAR_DEC : row 9 col 18
BRACES { row 9 col 20
IDENTIFIER first row 10 col 13
ASS_OP := row 10 col 15
NUMBER 0 row 10 col 17
SEMICOLON ; row 10 col 18
IDENTIFIER j row 11 col 9
ASS_OP := row 11 col 12
NUMBER 1 row 11 col 14
SEMICOLON ; row 11 col 15
KEYWORD while row 12 col 13
IDENTIFIER j row 12 col 15
RO_OP < row 12 col 17
IDENTIFIER i row 12 col 19
VAR_DEC : row 12 col 20
BRACES { row 12 col 22
IDENTIFIER write row 13 col 17
PRNT ( row 13 col 18
IDENTIFIER j row 13 col 20
PRNT ) row 13 col 21
SEMICOLON ; row 13 col 22
IDENTIFIER j row 14 col 17
ASS_OP := row 14 col 20
IDENTIFIER j row 14 col 22
AR_OP + row 14 col 24
NUMBER 1 row 14 col 26
SEMICOLON ; row 14 col 27
BRACES } row 15 col 9
KEYWORD if row 16 col 10
IDENTIFIER j row 16 col 12
RO_OP == row 16 col 15
NUMBER 1 row 16 col 17
VAR_DEC : row 16 col 18
BRACES { row 16 col 19
KEYWORD print row 17 col 21
PRNT ( row 17 col 22
STRING "one" row 17 col 27
PRNT ) row 17 col 28
SEMICOLON ; row 17 col 29
KEYWORD if row 18 col 14
IDENTIFIER k row 18 col 16
RO_OP == row 18 col 19
NUMBER 2 row 18 col 21
VAR_DEC : row 18 col 22
BRACES { row 18 col 23
KEYWORD print row 19 col 21
PRNT ( row 19 col 22
STRING "three" row 19 col 29
PRNT ) row 19 col 30
SEMICOLON ; row 19 col 31
BRACES } row 20 col 13
BRACES } row 21 col 9
KEYWORD elif row 22 col 12
IDENTIFIER j row 22 col 14
RO_OP == row 22 col 16
NUMBER 2 row 22 col 17
VAR_DEC : row 22 col 18
BRACES { row 22 col 19
KEYWORD print row 23 col 17
PRNT ( row 23 col 18
STRING "two" row 23 col 23
PRNT ) row 23 col 24
SEMICOLON ; row 23 col 25
BRACES } row 24 col 9
KEYWORD elif row 25 col 12
IDENTIFIER a row 25 col 14
RO_OP == row 25 col 17
NUMBER 3 row 25 col 18
VAR_DEC : row 25 col 19
BRACES { row 25 col 20
KEYWORD print row 26 col 17
PRNT ( row 26 col 18
STRING "balalalal" row 26 col 29
PRNT ) row 26 col 30
SEMICOLON ; row 26 col 31
BRACES } row 27 col 9
KEYWORD else row 27 col 14
BRACES { row 27 col 16
KEYWORD print row 28 col 17
PRNT ( row 28 col 18
STRING "others" row 28 col 26
PRNT ) row 28 col 27
SEMICOLON ; row 28 col 28
BRACES } row 29 col 9
IDENTIFIER i row 31 col 9
ASS_OP := row 31 col 11
IDENTIFIER i row 31 col 13
AR_OP - row 31 col 15
NUMBER 1 row 31 col 17
SEMICOLON ; row 31 col 18
BRACES } row 35 col 5
IDENTIFIER z row 36 col 6
ASS_OP := row 36 col 9
NUMBER 3 row 36 col 11
AR_OP * row 36 col 13
NUMBER 5 row 36 col 15
AR_OP + row 36 col 17
NUMBER 24 row 36 col 20
AR_OP - row 36 col 22
NUMBER 3 row 36 col 24
AR_OP / row 36 col 26
IDENTIFIER a row 36 col 28
AR_OP + row 36 col 30
NUMBER 20 row 36 col 33
AR_OP + row 36 col 35
PRNT ( row 36 col 37
NUMBER 3 row 36 col 39
AR_OP / row 36 col 41
NUMBER 4 row 36 col 43
AR_OP - row 36 col 45
NUMBER 2 row 36 col 46
PRNT ) row 36 col 47
SEMICOLON ; row 36 col 48
KEYWORD print row 37 col 10
PRNT ( row 37 col 11
STRING "temp is" row 37 col 20
PRNT ) row 37 col 21
SEMICOLON ; row 37 col 22
KEYWORD println row 38 col 12
PRNT ( row 38 col 13
IDENTIFIER temp row 38 col 17
PRNT ) row 38 col 18
SEMICOLON ; row 38 col 19
IDENTIFIER ret row 39 col 8
IDENTIFIER i row 39 col 10
SEMICOLON ; row 39 col 11
BRACES } row 40 col 1

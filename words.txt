DATATYPE func row 0 col 3
DATATYPE Integer row 0 col 11
VAR_DEC : row 0 col 12
DATATYPE numPrint row 0 col 21
PRNT ( row 0 col 23
DATATYPE Integer row 0 col 30
VAR_DEC : row 0 col 31
DATATYPE num row 0 col 35
COMMA , row 0 col 36
DATATYPE Integer row 0 col 44
VAR_DEC : row 0 col 45
DATATYPE length row 0 col 52
PRNT ) row 0 col 53
BRACES { row 0 col 55
BRACES { row 0 col 55
BRACES { row 0 col 55
DATATYPE Integer row 1 col 12
VAR_DEC : row 1 col 13
DATATYPE i row 1 col 15
COMMA , row 1 col 16
DATATYPE j row 1 col 18
COMMA , row 1 col 19
DATATYPE first row 1 col 25
COMMA , row 1 col 26
DATATYPE temp row 1 col 31
SEMICOLON ; row 1 col 32
SEMICOLON ; row 1 col 32
SEMICOLON ; row 1 col 32
KEYWORD char row 2 col 9
VAR_DEC : row 2 col 11
DATATYPE a row 2 col 13
SEMICOLON ; row 2 col 14
SEMICOLON ; row 2 col 14
SEMICOLON ; row 2 col 14
DATATYPE a row 3 col 6
ASS_OP := row 3 col 9
LIT_CONST 'x' row 3 col 13
SEMICOLON ; row 3 col 14
SEMICOLON ; row 3 col 14
SEMICOLON ; row 3 col 14
KEYWORD print row 4 col 10
PRNT ( row 4 col 12
STRING "enter number" row 4 col 26
PRNT ) row 4 col 27
SEMICOLON ; row 4 col 28
SEMICOLON ; row 4 col 28
SEMICOLON ; row 4 col 28
DATATYPE In row 5 col 7
INPUT_OP >> row 5 col 10
DATATYPE i row 5 col 12
SEMICOLON ; row 5 col 13
SEMICOLON ; row 5 col 13
SEMICOLON ; row 5 col 13
KEYWORD println row 6 col 12
PRNT ( row 6 col 14
DATATYPE i row 6 col 15
PRNT ) row 6 col 16
SEMICOLON ; row 6 col 17
SEMICOLON ; row 6 col 17
SEMICOLON ; row 6 col 17
DATATYPE i row 7 col 6
ASS_OP := row 7 col 9
DATATYPE length row 7 col 16
SEMICOLON ; row 7 col 17
SEMICOLON ; row 7 col 17
SEMICOLON ; row 7 col 17
KEYWORD while row 8 col 10
DATATYPE i row 8 col 12
RO_OP > row 8 col 14
NUMBER 0 row 8 col 16
VAR_DEC : row 8 col 18
VAR_DEC : row 8 col 18
VAR_DEC : row 8 col 18
BRACES { row 9 col 6
BRACES { row 9 col 6
BRACES { row 9 col 6
DATATYPE first row 10 col 10
ASS_OP := row 10 col 12
NUMBER 0 row 10 col 14
SEMICOLON ; row 10 col 15
SEMICOLON ; row 10 col 15
SEMICOLON ; row 10 col 15
DATATYPE j row 11 col 6
ASS_OP := row 11 col 9
NUMBER 1 row 11 col 11
SEMICOLON ; row 11 col 12
SEMICOLON ; row 11 col 12
SEMICOLON ; row 11 col 12
KEYWORD while row 12 col 10
DATATYPE j row 12 col 12
RO_OP < row 12 col 14
DATATYPE i row 12 col 16
VAR_DEC : row 12 col 17
VAR_DEC : row 12 col 17
VAR_DEC : row 12 col 17
BRACES { row 13 col 6
BRACES { row 13 col 6
BRACES { row 13 col 6
BRACES { row 13 col 6
DATATYPE write row 14 col 15
PRNT ( row 14 col 16
DATATYPE j row 14 col 18
PRNT ) row 14 col 19
SEMICOLON ; row 14 col 20
SEMICOLON ; row 14 col 20
SEMICOLON ; row 14 col 20
SEMICOLON ; row 14 col 20
SEMICOLON ; row 14 col 20
DATATYPE j row 15 col 16
ASS_OP := row 15 col 19
DATATYPE j row 15 col 21
AR_OP + row 15 col 23
NUMBER 1 row 15 col 25
SEMICOLON ; row 15 col 26
SEMICOLON ; row 15 col 26
SEMICOLON ; row 15 col 26
BRACES } row 16 col 6
BRACES } row 16 col 6
BRACES } row 16 col 6
KEYWORD if row 17 col 7
DATATYPE j row 17 col 9
RO_OP == row 17 col 12
NUMBER 1 row 17 col 14
VAR_DEC : row 17 col 15
BRACES { row 17 col 16
BRACES { row 17 col 16
BRACES { row 17 col 16
BRACES { row 17 col 16
KEYWORD print row 18 col 15
PRNT ( row 18 col 16
STRING "one" row 18 col 21
PRNT ) row 18 col 22
SEMICOLON ; row 18 col 23
SEMICOLON ; row 18 col 23
SEMICOLON ; row 18 col 23
BRACES } row 19 col 6
BRACES } row 19 col 6
BRACES } row 19 col 6
KEYWORD elif row 20 col 9
DATATYPE j row 20 col 11
RO_OP == row 20 col 13
NUMBER 2 row 20 col 14
VAR_DEC : row 20 col 15
BRACES { row 20 col 16
BRACES { row 20 col 16
BRACES { row 20 col 16
BRACES { row 20 col 16
KEYWORD print row 21 col 15
PRNT ( row 21 col 16
STRING "two" row 21 col 21
PRNT ) row 21 col 22
SEMICOLON ; row 21 col 23
SEMICOLON ; row 21 col 23
SEMICOLON ; row 21 col 23
BRACES } row 22 col 6
BRACES } row 22 col 6
BRACES } row 22 col 6
KEYWORD else row 23 col 9
KEYWORD else row 23 col 9
KEYWORD else row 23 col 9
BRACES { row 24 col 6
BRACES { row 24 col 6
BRACES { row 24 col 6
BRACES { row 24 col 6
KEYWORD print row 25 col 15
PRNT ( row 25 col 16
STRING "others" row 25 col 24
PRNT ) row 25 col 25
SEMICOLON ; row 25 col 26
SEMICOLON ; row 25 col 26
SEMICOLON ; row 25 col 26
BRACES } row 26 col 6
BRACES } row 26 col 6
BRACES } row 26 col 6
BRACES } row 26 col 6
BRACES } row 26 col 6
BRACES } row 26 col 6
BRACES } row 26 col 6
DATATYPE i row 28 col 11
ASS_OP := row 28 col 13
DATATYPE i row 28 col 15
AR_OP - row 28 col 17
NUMBER 1 row 28 col 19
SEMICOLON ; row 28 col 20
SEMICOLON ; row 28 col 20
SEMICOLON ; row 28 col 20
SEMICOLON ; row 28 col 20
SEMICOLON ; row 28 col 20
SEMICOLON ; row 28 col 20
BRACES } row 32 col 6
BRACES } row 32 col 6
BRACES } row 32 col 6
KEYWORD print row 33 col 10
PRNT ( row 33 col 12
STRING "temp is" row 33 col 21
PRNT ) row 33 col 22
SEMICOLON ; row 33 col 23
SEMICOLON ; row 33 col 23
SEMICOLON ; row 33 col 23
KEYWORD println row 34 col 12
PRNT ( row 34 col 13
DATATYPE temp row 34 col 17
PRNT ) row 34 col 18
SEMICOLON ; row 34 col 19
SEMICOLON ; row 34 col 19
SEMICOLON ; row 34 col 19
DATATYPE ret row 35 col 8
DATATYPE i row 35 col 10
SEMICOLON ; row 35 col 11
SEMICOLON ; row 35 col 11

KEYWORD func row 0 col 3
KEYWORD integer row 0 col 11
VAR_DEC : row 0 col 12
IDENTIFIER numPrint row 0 col 21
PRNT ( row 0 col 23
KEYWORD integer row 0 col 30
VAR_DEC : row 0 col 31
IDENTIFIER num row 0 col 35
COMMA , row 0 col 36
KEYWORD integer row 0 col 44
VAR_DEC : row 0 col 45
IDENTIFIER length row 0 col 52
PRNT ) row 0 col 53
BRACES { row 0 col 55
KEYWORD integer row 1 col 12
VAR_DEC : row 1 col 13
IDENTIFIER i row 1 col 15
COMMA , row 1 col 16
IDENTIFIER j row 1 col 18
COMMA , row 1 col 19
IDENTIFIER first row 1 col 25
COMMA , row 1 col 26
IDENTIFIER temp row 1 col 31
COMMA , row 1 col 32
IDENTIFIER length row 1 col 39
COMMA , row 1 col 40
IDENTIFIER z row 1 col 42
SEMICOLON ; row 1 col 43
IDENTIFIER length row 2 col 11
ASS_OP := row 2 col 14
NUMBER 1 row 2 col 16
SEMICOLON ; row 2 col 17
KEYWORD char row 3 col 9
VAR_DEC : row 3 col 11
IDENTIFIER a row 3 col 13
SEMICOLON ; row 3 col 14
IDENTIFIER j row 4 col 6
ASS_OP := row 4 col 9
NUMBER 2 row 4 col 11
SEMICOLON ; row 4 col 12
IDENTIFIER first row 5 col 10
ASS_OP := row 5 col 13
NUMBER 4 row 5 col 15
SEMICOLON ; row 5 col 16
IDENTIFIER temp row 6 col 9
ASS_OP := row 6 col 12
NUMBER 5 row 6 col 14
SEMICOLON ; row 6 col 15
IDENTIFIER i row 7 col 5
ASS_OP := row 7 col 8
IDENTIFIER j row 7 col 10
AR_OP + row 7 col 12
PRNT ( row 7 col 14
IDENTIFIER first row 7 col 19
AR_OP + row 7 col 21
IDENTIFIER temp row 7 col 26
PRNT ) row 7 col 27
AR_OP * row 7 col 29
IDENTIFIER temp row 7 col 34
AR_OP - row 7 col 36
IDENTIFIER first row 7 col 42
SEMICOLON ; row 7 col 43
IDENTIFIER a row 8 col 6
ASS_OP := row 8 col 9
LIT_CONST 'x' row 8 col 13
SEMICOLON ; row 8 col 14
KEYWORD println row 9 col 12
PRNT ( row 9 col 14
IDENTIFIER i row 9 col 15
PRNT ) row 9 col 16
SEMICOLON ; row 9 col 17
KEYWORD print row 10 col 10
PRNT ( row 10 col 11
STRING "Enter number:" row 10 col 26
PRNT ) row 10 col 27
SEMICOLON ; row 10 col 28
KEYWORD in row 11 col 6
INPUT_OP >> row 11 col 9
IDENTIFIER i row 11 col 11
SEMICOLON ; row 11 col 12
IDENTIFIER i row 12 col 6
ASS_OP := row 12 col 9
IDENTIFIER length row 12 col 16
SEMICOLON ; row 12 col 17
KEYWORD while row 13 col 10
IDENTIFIER i row 13 col 12
RO_OP > row 13 col 14
NUMBER 0 row 13 col 16
VAR_DEC : row 13 col 18
BRACES { row 13 col 20
IDENTIFIER j row 14 col 10
ASS_OP := row 14 col 13
NUMBER 1 row 14 col 15
SEMICOLON ; row 14 col 16
IDENTIFIER first row 15 col 14
ASS_OP := row 15 col 17
NUMBER 3 row 15 col 19
SEMICOLON ; row 15 col 20
KEYWORD if row 16 col 11
IDENTIFIER j row 16 col 13
RO_OP == row 16 col 16
NUMBER 1 row 16 col 18
VAR_DEC : row 16 col 20
BRACES { row 16 col 22
KEYWORD print row 17 col 18
PRNT ( row 17 col 19
STRING "j is one" row 17 col 29
PRNT ) row 17 col 30
SEMICOLON ; row 17 col 31
KEYWORD if row 18 col 15
IDENTIFIER first row 18 col 21
RO_OP == row 18 col 24
NUMBER 3 row 18 col 26
VAR_DEC : row 18 col 28
BRACES { row 18 col 30
KEYWORD print row 19 col 22
PRNT ( row 19 col 23
STRING "first is three" row 19 col 39
PRNT ) row 19 col 40
SEMICOLON ; row 19 col 41
BRACES } row 20 col 14
BRACES } row 21 col 10
KEYWORD elif row 22 col 13
IDENTIFIER j row 22 col 15
RO_OP == row 22 col 18
NUMBER 2 row 22 col 20
VAR_DEC : row 22 col 22
BRACES { row 22 col 24
KEYWORD print row 23 col 18
PRNT ( row 23 col 19
STRING "j is two" row 23 col 29
PRNT ) row 23 col 30
SEMICOLON ; row 23 col 31
IDENTIFIER first row 24 col 18
ASS_OP := row 24 col 21
NUMBER 4 row 24 col 23
SEMICOLON ; row 24 col 24
KEYWORD print row 25 col 18
PRNT ( row 25 col 19
STRING "but now first is four" row 25 col 42
PRNT ) row 25 col 43
SEMICOLON ; row 25 col 44
BRACES } row 26 col 10
IDENTIFIER i row 28 col 9
ASS_OP := row 28 col 12
IDENTIFIER i row 28 col 14
AR_OP - row 28 col 16
NUMBER 1 row 28 col 18
SEMICOLON ; row 28 col 19
BRACES } row 32 col 5
IDENTIFIER z row 33 col 6
ASS_OP := row 33 col 9
NUMBER 3 row 33 col 11
AR_OP * row 33 col 13
NUMBER 5 row 33 col 15
AR_OP + row 33 col 17
NUMBER 24 row 33 col 20
AR_OP - row 33 col 22
NUMBER 3 row 33 col 24
AR_OP / row 33 col 26
IDENTIFIER temp row 33 col 31
AR_OP + row 33 col 33
NUMBER 20 row 33 col 36
AR_OP + row 33 col 38
PRNT ( row 33 col 40
NUMBER 3 row 33 col 42
AR_OP / row 33 col 44
NUMBER 4 row 33 col 46
AR_OP - row 33 col 48
NUMBER 2 row 33 col 50
PRNT ) row 33 col 51
SEMICOLON ; row 33 col 52
KEYWORD print row 34 col 10
PRNT ( row 34 col 11
STRING "Temp is: " row 34 col 22
PRNT ) row 34 col 23
SEMICOLON ; row 34 col 24
KEYWORD print row 35 col 10
PRNT ( row 35 col 11
IDENTIFIER temp row 35 col 15
PRNT ) row 35 col 16
SEMICOLON ; row 35 col 17
IDENTIFIER ret row 36 col 8
IDENTIFIER i row 36 col 10
SEMICOLON ; row 36 col 11
BRACES } row 37 col 1

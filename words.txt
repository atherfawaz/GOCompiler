KEYWORD func row 0 col 3
KEYWORD integer row 0 col 11
VAR_DEC : row 0 col 12
IDENTIFIER numPrint row 0 col 21
PRNT ( row 0 col 23
KEYWORD integer row 0 col 30
VAR_DEC : row 0 col 31
IDENTIFIER num row 0 col 35
COMMA , row 0 col 36
KEYWORD integer row 0 col 44
VAR_DEC : row 0 col 45
IDENTIFIER length row 0 col 52
PRNT ) row 0 col 53
BRACES { row 0 col 55
KEYWORD integer row 1 col 12
VAR_DEC : row 1 col 13
IDENTIFIER i row 1 col 15
COMMA , row 1 col 16
IDENTIFIER j row 1 col 18
COMMA , row 1 col 19
IDENTIFIER first row 1 col 25
COMMA , row 1 col 26
IDENTIFIER temp row 1 col 31
COMMA , row 1 col 32
IDENTIFIER length row 1 col 39
COMMA , row 1 col 40
IDENTIFIER z row 1 col 42
SEMICOLON ; row 1 col 43
IDENTIFIER length row 2 col 11
ASS_OP := row 2 col 14
NUMBER 1 row 2 col 16
SEMICOLON ; row 2 col 17
IDENTIFIER j row 3 col 6
ASS_OP := row 3 col 9
NUMBER 2 row 3 col 11
SEMICOLON ; row 3 col 12
IDENTIFIER first row 4 col 10
ASS_OP := row 4 col 13
NUMBER 4 row 4 col 15
SEMICOLON ; row 4 col 16
IDENTIFIER temp row 5 col 9
ASS_OP := row 5 col 12
NUMBER 5 row 5 col 14
SEMICOLON ; row 5 col 15
IDENTIFIER i row 6 col 5
ASS_OP := row 6 col 8
IDENTIFIER j row 6 col 10
AR_OP + row 6 col 12
PRNT ( row 6 col 14
IDENTIFIER first row 6 col 19
AR_OP + row 6 col 21
IDENTIFIER temp row 6 col 26
PRNT ) row 6 col 27
AR_OP * row 6 col 29
IDENTIFIER temp row 6 col 34
AR_OP - row 6 col 36
IDENTIFIER first row 6 col 42
SEMICOLON ; row 6 col 43
KEYWORD println row 8 col 12
PRNT ( row 8 col 14
IDENTIFIER i row 8 col 15
PRNT ) row 8 col 16
SEMICOLON ; row 8 col 17
KEYWORD in row 10 col 6
INPUT_OP >> row 10 col 9
IDENTIFIER i row 10 col 11
SEMICOLON ; row 10 col 12
IDENTIFIER i row 11 col 6
ASS_OP := row 11 col 9
IDENTIFIER length row 11 col 16
SEMICOLON ; row 11 col 17
KEYWORD while row 12 col 10
IDENTIFIER i row 12 col 12
RO_OP > row 12 col 14
NUMBER 0 row 12 col 16
VAR_DEC : row 12 col 18
BRACES { row 12 col 20
IDENTIFIER j row 13 col 10
ASS_OP := row 13 col 13
NUMBER 1 row 13 col 15
SEMICOLON ; row 13 col 16
IDENTIFIER first row 14 col 14
ASS_OP := row 14 col 17
NUMBER 3 row 14 col 19
SEMICOLON ; row 14 col 20
KEYWORD if row 15 col 11
IDENTIFIER j row 15 col 13
RO_OP == row 15 col 16
NUMBER 1 row 15 col 18
VAR_DEC : row 15 col 20
BRACES { row 15 col 22
KEYWORD if row 17 col 15
IDENTIFIER first row 17 col 21
RO_OP == row 17 col 24
NUMBER 3 row 17 col 26
VAR_DEC : row 17 col 28
BRACES { row 17 col 30
BRACES } row 19 col 14
BRACES } row 20 col 10
KEYWORD else row 21 col 13
BRACES { row 21 col 15
IDENTIFIER first row 23 col 18
ASS_OP := row 23 col 21
NUMBER 4 row 23 col 23
SEMICOLON ; row 23 col 24
BRACES } row 25 col 10
IDENTIFIER i row 27 col 9
ASS_OP := row 27 col 12
IDENTIFIER i row 27 col 14
AR_OP - row 27 col 16
NUMBER 1 row 27 col 18
SEMICOLON ; row 27 col 19
BRACES } row 31 col 5
IDENTIFIER z row 32 col 6
ASS_OP := row 32 col 9
NUMBER 3 row 32 col 11
AR_OP * row 32 col 13
NUMBER 5 row 32 col 15
AR_OP + row 32 col 17
NUMBER 24 row 32 col 20
AR_OP - row 32 col 22
NUMBER 3 row 32 col 24
AR_OP / row 32 col 26
IDENTIFIER temp row 32 col 31
AR_OP + row 32 col 33
NUMBER 20 row 32 col 36
AR_OP + row 32 col 38
PRNT ( row 32 col 40
NUMBER 3 row 32 col 42
AR_OP / row 32 col 44
NUMBER 4 row 32 col 46
AR_OP - row 32 col 48
NUMBER 2 row 32 col 50
PRNT ) row 32 col 51
SEMICOLON ; row 32 col 52
KEYWORD print row 33 col 10
PRNT ( row 33 col 11
IDENTIFIER temp row 33 col 15
PRNT ) row 33 col 16
SEMICOLON ; row 33 col 17
KEYWORD print row 34 col 10
PRNT ( row 34 col 11
IDENTIFIER z row 34 col 12
PRNT ) row 34 col 13
SEMICOLON ; row 34 col 14
KEYWORD print row 35 col 10
PRNT ( row 35 col 11
NUMBER 25 row 35 col 13
PRNT ) row 35 col 14
SEMICOLON ; row 35 col 15
IDENTIFIER ret row 36 col 8
IDENTIFIER i row 36 col 10
SEMICOLON ; row 36 col 11
BRACES } row 37 col 1
